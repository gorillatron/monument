;; Analyzed by ClojureScript 1.7.145
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name monument.pages.podcasts.core, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {timeout cljs.core.async, <! cljs.core.async, chan cljs.core.async, >! cljs.core.async}, :defs {->Array {:protocol-inline nil, :meta {:file "C:\\Users\\JørnAndre\\progg\\monument_clj\\src-cljs\\monument\\pages\\podcasts\\core.cljs", :line 8, :column 7, :end-line 8, :end-column 14, :arglists (quote ([array-like]))}, :name monument.pages.podcasts.core/->Array, :variadic false, :file "src-cljs\\monument\\pages\\podcasts\\core.cljs", :end-column 14, :method-params ([array-like]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([array-like]))}, render-chan {:name monument.pages.podcasts.core/render-chan, :file "src-cljs\\monument\\pages\\podcasts\\core.cljs", :line 11, :column 1, :end-line 11, :end-column 17, :meta {:file "C:\\Users\\JørnAndre\\progg\\monument_clj\\src-cljs\\monument\\pages\\podcasts\\core.cljs", :line 11, :column 6, :end-line 11, :end-column 17}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}